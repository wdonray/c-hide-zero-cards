name: Version Bump

on:
  push:
    branches:
      - main

jobs:
  version:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, '[RELEASE]') && !contains(github.event.head_commit.message, 'skip-release') }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Configure git
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Determine version bump type
        id: version-type
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"

          # Check for breaking changes
          if [[ "$COMMIT_MESSAGE" == *"BREAKING CHANGE"* ]] || [[ "$COMMIT_MESSAGE" == *"!:"* ]]; then
            echo "newversion=major" >> $GITHUB_OUTPUT
            echo "Bump type: major (breaking change detected)"
          elif [[ "$COMMIT_MESSAGE" =~ ^feat: ]]; then
            echo "newversion=minor" >> $GITHUB_OUTPUT
            echo "Bump type: minor (feature commit detected)"
          elif [[ "$COMMIT_MESSAGE" =~ ^fix: ]]; then
            echo "newversion=patch" >> $GITHUB_OUTPUT
            echo "Bump type: patch (fix commit detected)"
          else
            echo "newversion=patch" >> $GITHUB_OUTPUT
            echo "Bump type: patch (default for non-conventional commits)"
          fi

      - name: Bump version
        run: |
          npm version ${{ steps.version-type.outputs.newversion }} -m "chore: bump version to %s [deploy]"

      - name: Push changes and tags
        run: |
          git push --follow-tags
